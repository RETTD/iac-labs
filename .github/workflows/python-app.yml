# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults: 
      run:
        working-directory: ./example-app
        shell: bash
        
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - name: Install deps Poetry
      run: poetry install --no-root
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv 

  lint:
    runs-on: ubuntu-latest
    defaults: 
      run:
        working-directory: ./example-app
    needs: build
    concurrency:
      group: Poetry
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv 
    - name: Check is Poetry installed
      run: |
        poetry --version
    - name: Lint by Poetry
      run: |
        poetry run task lint
        
  formatter:
    runs-on: ubuntu-latest
    defaults: 
      run:
        working-directory: ./example-app
    needs: build
    concurrency:
      group: Poetry
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv 
    - name: Check is Poetry installed
      run: |
        poetry --version
    - name: Formatter by Poetry
      run: |
        poetry run task formatter
        
  security:
    runs-on: ubuntu-latest
    defaults: 
      run:
        working-directory: ./example-app
    needs: build
    concurrency:
      group: Poetry
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv      
    - name: Check is Poetry installed
      run: |
        poetry --version
    - name: Security by Poetry
      run: |
        poetry run task security
        
  unittests:
    runs-on: ubuntu-latest
    defaults: 
      run:
        working-directory: ./example-app
    needs: [security, lint, formatter]
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv 
    - name: Check is Poetry installed
      run: |
        poetry --version
    - name: Test by Poetry
      run: |
        poetry run task test
    
    
    
